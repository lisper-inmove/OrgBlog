#+TITLE: 456. 132模式
#+DATE: 2023-09-27 22:01:50
#+DISPLAY: t
#+STARTUP: indent
#+OPTIONS: toc:10
#+AUTHOR: inmove
#+KEYWORDS: Leetcode MonotonicStack
#+CATEGORIES: Leetcode
#+DIFFICULTY: Medium

* 132模式

https://leetcode.cn/problems/132-pattern/description/

把数组从后往前遍历，假设当前数字为x。把栈有所有比x小的数弹出，最后一个弹出的数假设为y，那么y一定是x之后比x小的最大的数。
因为当y入栈的时候把所有比y小的数都数都弹出去了。
所以继续往前遍历的过程中，只要有一个数比y小，就可以返回true了

#+begin_src python
  from typing import List

  class Solution:
      def find132pattern(self, nums: List[int]) -> bool:
          if len(nums) < 3:
              return False
          stack = []
          kValue = float('-inf')
          for _i in range(len(nums) - 1, -1, -1):

              if nums[_i] < kValue:
                  return True

              while stack and stack[-1] < nums[_i]:
                  kValue = stack.pop()

              stack.append(nums[_i])
          return False
#+end_src
