#+TITLE: Kong Base Conceptions
#+DATE: 2023-09-27 22:19:37
#+DISPLAY: t
#+STARTUP: indent
#+OPTIONS: toc:10
#+AUTHOR: inmove
#+KEYWORDS: API网关 Kong
#+CATEGORIES: API网关

* Upstream
  相当于nginx中的upstream
** Target
  相当于upstream中的server
** 常用API
  1. GET /upstreams: 列出所有上游。
  2. POST /upstreams: 创建一个新的上游。
  3. GET /upstreams/{upstream name or id}: 获取一个特定的上游的详细信息。
  4. PATCH /upstreams/{upstream name or id}: 更新一个特定的上游。
  5. DELETE /upstreams/{upstream name or id}: 删除一个特定的上游。
  6. GET /upstreams/{upstream name or id}/targets: 列出一个上游的所有目标。
  7. POST /upstreams/{upstream name or id}/targets: 为一个上游添加一个新的目标。
  8. DELETE /upstreams/{upstream name or id}/targets/{target id}: 从一个上游删除一个目标。
* Service
  相当于proxy_pass
** 常用的API
  1. GET /services: 列出所有服务。
  2. POST /services: 创建一个新的服务。
  3. GET /services/{service id/name}: 获取一个特定的服务的详细信息。
  4. PATCH /services/{service id/name}: 更新一个特定的服务。
  5. DELETE /services/{service id/name}: 删除一个特定的服务。
* Routes
  相当于hostname与location
** 常用的API
  1. GET /routes: 列出所有路由。
  2. POST /routes: 创建一个新的路由。
  3. GET /routes/{route id}: 获取一个特定的路由的详细信息。
  4. PATCH /routes/{route id}: 更新一个特定的路由。
  5. DELETE /routes/{route id}: 删除一个特定的路由。
* Consumer
  API使用者。可以是一个用户，一个应用，或者另一个服务，反正请求API的都能称为一个Consumer。
  它提供了更加精细的访问控制。
** 常用API
  1. GET /consumers: 列出所有消费者。
  2. POST /consumers: 创建一个新的消费者。
  3. GET /consumers/{username or id}: 获取一个特定的消费者的详细信息。
  4. PATCH /consumers/{username or id}: 更新一个特定的消费者。
  5. DELETE /consumers/{username or id}: 删除一个特定的消费者。
* 证书
** 常用API
  1. GET /certificates: 列出所有证书。
  2. POST /certificates: 添加一个新的证书。
  3. GET /certificates/{certificate id}: 获取一个特定的证书的详细信息。
  4. PATCH /certificates/{certificate id}: 更新一个特定的证书。
  5. DELETE /certificates/{certificate id}: 删除一个特定的证书。
* 插件
** 全局的插件
  1. GET /plugins: 列出所有的插件实例。
  2. POST /plugins: 创建一个新的插件实例。
  3. GET /plugins/{plugin id}: 获取一个特定插件实例的详细信息。
  4. PATCH /plugins/{plugin id}: 更新一个特定的插件实例。
  5. DELETE /plugins/{plugin id}: 删除一个特定的插件实例。
** Service的插件
  1. GET /services/{service id}/plugins: 列出一个特定服务上配置的所有插件。
  2. POST /services/{service id}/plugins: 在一个特定的服务上创建新的插件实例。
  3. GET /services/{service id}/plugins/{plugin id}: 获取特定服务上特定插件实例的详细信息。
  4. PATCH /services/{service id}/plugins/{plugin id}: 更新特定服务上的一个插件实例。
  5. DELETE /services/{service id}/plugins/{plugin id}: 删除特定服务上的一个插件实例。
** 路由上的插件
  1. GET /routes/{route id}/plugins: 列出一个特定路由上配置的所有插件。
  2. POST /routes/{route id}/plugins: 在一个特定的路由上创建新的插件实例。
  3. GET /routes/{route id}/plugins/{plugin id}: 获取特定路由上特定插件实例的详细信息。
  4. PATCH /routes/{route id}/plugins/{plugin id}: 更新特定路由上的一个插件实例。
  5. DELETE /routes/{route id}/plugins/{plugin id}: 删除特定路由上的一个插件实例。
** 消费者上的插件
  1. GET /consumers/{consumer id}/plugins: 列出一个特定消费者上配置的所有插件。
  2. POST /consumers/{consumer id}/plugins: 在一个特定的消费者上创建新的插件实例。
  3. GET /consumers/{consumer id}/plugins/{plugin id}: 获取特定消费者上特定插件实例的详细信息。
  4. PATCH /consumers/{consumer id}/plugins/{plugin id}: 更新特定消费者上的一个插件实例。
  5. DELETE /consumers/{consumer id}/plugins/{plugin id}: 删除特定消费者上的一个插件实例。

* 为域名添加tls acme插件
#+begin_src shell
  # HOSTS=kong.inmove.top  # *.inmove.top --data 'hosts=*.inmove.top'
  HOSTS=*.inmove.top
  EMAIL=lisper.inmove@gmail.com
  KONG_HOST=kmaster:8001
  TEST_HOST=blog.inmove.top

  curl --request POST \
    --url http://${KONG_HOST}/services \
    --header 'Content-Type: application/x-www-form-urlencoded' \
    --data name=dummy-service \
    --data url=http://127.0.0.1:65535

  curl --request POST \
    --url http://${KONG_HOST}/services/dummy-service/routes  \
    --header 'Content-Type: application/x-www-form-urlencoded' \
    --data name=dummy-route \
    --data hosts=${HOSTS} \
    --data protocols=http  \
    --data paths=/.well-known/acme-challenge

  curl --request POST \
    --url http://${KONG_HOST}/plugins \
    --header 'Content-Type: application/x-www-form-urlencoded' \
    --data name=acme \
    --data config.domains=${HOSTS} \
    --data config.tos_accepted=true \
    --data config.account_email=${EMAIL} \
    --data config.storage=kong

  # curl http://${KONG_HOST}/acme -d host=${TEST_HOST} -d test_http_challenge_flow=true
  # curl http://${KONG_HOST}/acme -d host=${TEST_HOST}

  # 查看证书
  # openssl s_client -connect ${TEST_HOST}:443

  # 添加新的域名
  # http :8001/plugins # 查看kong的插件
  # curl -X PATCH http://${KONG_HOST}/plugins/ACME的插件ID --data config.domains=xxx --data config.domains=yyy
#+end_src
