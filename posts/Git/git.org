#+TITLE: Git
#+DATE: 2023-09-28 00:57:21
#+DISPLAY: t
#+STARTUP: indent
#+OPTIONS: toc:10
#+AUTHOR: inmove
#+SUBTITLE: Git不常用的使用场景
#+KEYWORDS: Git
#+CATEGORIES: Git

* 使用http的方式的时候保存用户名与密码

#+begin_verse
运行以下命令之后,git会保存你输入的username和password。
下一次再push/pull等需要账户密码的命令时会让你输入密码，再之后就不再需要输入密码了
会在 *~/.git-credentials* 以明文的方式保存你的账号密码。所以请确保此服务器上的用户只有你一个人在使用
#+end_verse

#+begin_src shell
  git config --global credential.helper store
#+end_src

* 合并forked仓库

仓库A为原始仓库，B为从A fork过来的仓库。

在B仓库中操作:
1. git remote -v: 查看远端分支。尽管是从A fork过来的仓库但是在这里并不会看到A
2. git remote add upstream A: 把A作为上游添加到B
3. git remote -v: 这时就能看到A了
4. git merge upstream/A: 合并A到B
5. git push origin B: 把B推到仓库

* 删除大文件,包括在历史记录上抹去

** filter-branch
1. 列出大文件
#+begin_src shell
  git rev-list --all | xargs -rL1 git ls-tree -r --long  | sort -uk3 | sort -rnk4 | head -10
#+end_src
2. 删除，替换要删除的文件名
#+begin_src shell
  git filter-branch --force --index-filter 'git rm --cached --ignore-unmatch path/to/delete/filename' --prune-empty --tag-name-filter cat -- --all
#+end_src
3. 提交到远端
#+begin_src shell
  git push origin --force --all
#+end_src
** git-filter-repo
1. 安装工具包
#+begin_src shell
  pip install git-filter-repo
#+end_src
2. 执行删除
#+begin_src shell
  git filter-repo --path path/to/big-file --invert-paths
#+end_src
