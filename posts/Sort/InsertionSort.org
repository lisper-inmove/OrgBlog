#+TITLE: 插入排序
#+DATE: 2023-09-27 21:48:20
#+DISPLAY: t
#+STARTUP: indent
#+OPTIONS: toc:10
#+AUTHOR: inmove
#+KEYWORDS: Algorithm 插入排序
#+CATEGORIES: 排序

* InsertionSort
#+begin_src python
  def insertionSort(arr):
      """
      [0..i]个元素已经排好序了。第i+1个数字往前移动，直到遇到比它小的数字。
      最好情况下，已经排好序了，每次往前移动都是O(1)，那么总的时间复杂度为O(n)
      最坏情况下，与要排的顺序是相反的，每次移动都要移动到最前在同，总的时间复杂度为O(n^2)
      """
      n = len(arr)
      for i in range(1, n):
          key = arr[i]
          # 将arr[i]元素插入到已排序的子序列arr[0...i-1]
          j = i - 1
          while j >= 0 and key < arr[j]:
              arr[j + 1] = arr[j]
              j -= 1
          arr[j + 1] = key
      return arr
#+end_src
