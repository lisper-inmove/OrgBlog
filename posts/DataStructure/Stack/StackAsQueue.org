#+TITLE: 用两个栈实现一个队列
#+DATE: 2023-09-28 00:35:56
#+DISPLAY: t
#+STARTUP: indent
#+OPTIONS: toc:10
#+AUTHOR: inmove
#+KEYWORDS: 算法 栈
#+CATEGORIES: 栈 数据结构

* 双栈成队

利用两个栈组成一个队列
1. A,B两个栈。入队列时只往A push元素
2. 出队列时，如果B中有元素，直接弹出。否则，先将A中所有元素pop出来，加入到B，再从B中弹出一个元素即可

#+begin_src python
  class StackQueue:

      def __init__(self):
          self.A = []
          self.B = []

      def add(self, value):
          self.A.append(value)
          return self

      def isEmpty(self):
          if len(self.A) == 0 and len(self.B) == 0:
              return True
          return False

      def poll(self):
          if self.isEmpty():
              return float('inf')
          if self.B:
              return self.B.pop()
          while self.A:
              self.B.append(self.A.pop())
          return self.B.pop()


  if __name__ == '__main__':
      queue = StackQueue()
      values = [1, 2, 3, 4]
      print(f"入队列: {values}")
      [queue.add(v) for v in values]

      for i in range(0, len(values)):
          print(f"出队列: {queue.poll()}")
#+end_src
