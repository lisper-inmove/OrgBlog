#+TITLE: 单调栈
#+DATE: 2023-09-27 21:44:43
#+DISPLAY: t
#+STARTUP: indent
#+OPTIONS: toc:10
#+AUTHOR: inmove
#+KEYWORDS: 单调栈 数据结构
#+CATEGORIES: 单调栈 数据结构

* 什么是单调栈

#+begin_verse
  栈里始终保持有序。入栈规则是这样的(从小到大)：
  1. 栈里没有数据，直接入栈
  2. 栈里有数据，查看栈顶数据(不弹出)，只要栈顶数据比新数大，则弹出。直到栈空或者找到一个比新数小的数，新数入栈。

  主要用于解决 寻找两边比自己 小/大 的数

  有如下数组: [9, 4, 3, 5]，要找出左右两边比自身大的数：
  1. 9，此时栈空，直接入栈，对于9来说，左边没有比自己大的数。top = 9
  2. 4, top > 4，4入栈。top = 4
  3. 3, top > 3, 3入栈。top = 3
  4. 5, top < 5。对于3来说，右边比它大的数是5，弹出3之后，左边比它大的数是新的栈顶，也就是4。top = 4
  5. top < 5。对于4来说，右边比它大的数是5，弹出4之后，左边比它大的数是新的栈顶，也就是9。top = 9
  6. top > 9。5入栈 top 5
  7. 因为栈不空，一个一个元素弹出，每个弹出的元素，它右边没有比它大的数，它左边比它大的数是该元素弹出后的栈顶元素。栈中最后一个元素是数组中最大的数。
#+end_verse
