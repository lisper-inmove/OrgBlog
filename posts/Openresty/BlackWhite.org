#+TITLE: Openresty 黑白名单
#+DATE: 2023-10-20 16:09:52
#+DISPLAY: t
#+STARTUP: indent
#+OPTIONS: toc:10
#+AUTHOR: inmove
#+KEYWORDS: openresty
#+CATEGORIES: API网关

* init_worker.lua

#+begin_src shell
  # 在共享内存中分配一块空间来放黑名单列表
  lua_shared_dict bklist 1m;
  # init_worker.luad脚本存放位置
  init_worker_by_lua_file "/home/inmove/.opt/openresty/init_worker/init_worker.lua";
#+end_src

#+NAME: init_worker.lua
#+begin_src lua
  -- 在某一个worker进程中，设置一个定时器，每5秒钟去Redis中同步一次黑名单，然后将黑名单设置到nginx的共享内存中

  if ngx.worker.id() ~= 0 then
     return
  end

  local redis = require "resty.redis"
  local bklist = ngx.shared.bklist;

  local function update_blacklist()
     local red = redis:new()
     local ok, err = red:connect("127.0.0.1", 6379)
     if not ok then
        return
     end
     local bklist_redis, err = red:smembers("bklist")
     bklist:flush_all();
     for _, v in pairs(bklist_redis) do
        ngx.log(ngx.INFO, "###########", v)
        bklist:set(v, true)
     end
     ngx.log(ngx.INFO, ">>>> ", err, ">>>> ", table.concat(bklist_redis, "###"))
     ngx.timer.at(5, update_blacklist)
     ngx.log(ngx.INFO, "load blacklist success")

  end

  ngx.timer.at(5, update_blacklist)

#+end_src

* blackwhite-list.lua
#+begin_src lua
  -- 如果这样写的话就使用 access_by_lua_file
  -- local bklist = ngx.shared.bklist

  -- local ip = ngx.var.remote_addr

  -- if bklist:get(ip) then
  --    return ngx.exit(403)
  -- end

  local M = {}

  function M.check_blacklist()
     local bklist = ngx.shared.bklist
     local ip = ngx.var.remote_addr
     if bklist:get(ip) then
        return ngx.exit(403)
     end
  end

  return M

#+end_src

* Nginx中配置脚本
#+begin_src conf
  server {
      server_name api.com;
      listen 10101;
      default_type text/plain;
      access_by_lua_block {
          require('blackwhite-list').check_blacklist()
          require('request-limit').limit()
      }

      location / {
          # access_by_lua_file "../scripts/blackwhite-list.lua";
          content_by_lua_block {
              ngx.say("Hello")
          }
      }

      root /home/inmove/www/api;

  }
#+end_src
